{"version":3,"sources":["molecule/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmitting","setIsSubmitting","disableButton","setDisableButton","handleChange","e","target","name","value","validate","values","errors","test","length","useEffect","Object","keys","console","log","className","onSubmit","preventDefault","noValidate","htmlFor","type","id","onChange","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA0GeA,G,MAvGF,WACX,IADiB,EAEmBC,mBADf,CAAEC,MAAO,GAAIC,SAAU,KAD3B,mBAEVC,EAFU,KAEEC,EAFF,OAGmBJ,mBAAS,IAH5B,mBAGVK,EAHU,KAGEC,EAHF,OAIuBN,oBAAS,GAJhC,mBAIVO,EAJU,KAIIC,EAJJ,OAKyBR,oBAAS,GALlC,mBAKVS,EALU,KAKKC,EALL,KAYXC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACA,MAAVA,GACFL,GAAiB,GAEnBN,EAAc,2BAAKD,GAAN,kBAAmBW,EAAOC,MAWnCC,EAAW,SAACC,GAChB,IAAIC,EAAS,GAeb,OAZKD,EAAOhB,MAFE,iCAIIkB,KAAKF,EAAOhB,SAC5BiB,EAAOjB,MAAQ,wBAFfiB,EAAOjB,MAAQ,kBAKZgB,EAAOf,SAEDe,EAAOf,SAASkB,OAAS,IAClCF,EAAOhB,SAAW,2CAFlBgB,EAAOhB,SAAW,kBAKbgB,GAST,OANAG,qBAAU,WAC+B,IAAnCC,OAAOC,KAAKlB,GAAYe,QAAgBb,GAxC5CiB,QAAQC,IAAItB,KA2CX,CAACE,IAGF,sBAAKqB,UAAU,YAAf,UACsC,IAAnCJ,OAAOC,KAAKlB,GAAYe,QAAgBb,GACvC,sBAAMmB,UAAU,cAAhB,yCAEF,uBAAMC,SArCW,SAACf,GACpBA,EAAEgB,iBACFtB,EAAcU,EAASb,IACvBK,GAAgB,IAkCgBqB,YAAU,EAACH,UAAU,cAAnD,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOI,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACLjB,KAAK,QACLkB,GAAG,QACHjB,MAAOZ,EAAWF,MAClBgC,SAAUtB,EACVe,UAAWrB,EAAWJ,OAAS,gBAEhCI,EAAWJ,OACV,sBAAMyB,UAAU,QAAhB,SAAyBrB,EAAWJ,WAIxC,sBAAKyB,UAAU,WAAf,UACE,uBAAOI,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLjB,KAAK,WACLkB,GAAG,WACHjB,MAAOZ,EAAWD,SAClB+B,SAAUtB,EACVe,UAAWrB,EAAWH,UAAY,gBAEnCG,EAAWH,UACV,sBAAMwB,UAAU,QAAhB,SAAyBrB,EAAWH,cAIxC,sBAAMwB,UAAU,eAAhB,SACE,wBACEK,KAAK,SACLL,UAAWjB,GAAiB,eAC5ByB,SAAUzB,EAHZ,+BClFK0B,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCMSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46fe525d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = () => {\r\n  const intialValues = { email: \"\", password: \"\" };\r\n  const [formValues, setFormValues] = useState(intialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [disableButton, setDisableButton] = useState(true);\r\n\r\n  const submit = () => {\r\n    console.log(formValues);\r\n  };\r\n\r\n  //input change handler\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (value !== \" \") {\r\n      setDisableButton(false);\r\n    }\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  //form submission handler\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  //form validation handler\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Cannot be blank\";\r\n    } else if (!regex.test(values.email)) {\r\n      errors.email = \"Invalid email format\";\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = \"Cannot be blank\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\r\n      submit();\r\n    }\r\n  }, [formErrors]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {Object.keys(formErrors).length === 0 && isSubmitting && (\r\n        <span className=\"success-msg\">Form submitted successfully</span>\r\n      )}\r\n      <form onSubmit={handleSubmit} noValidate className=\"form-detail\">\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={formValues.email}\r\n            onChange={handleChange}\r\n            className={formErrors.email && \"input-error\"}\r\n          />\r\n          {formErrors.email && (\r\n            <span className=\"error\">{formErrors.email}</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={formValues.password}\r\n            onChange={handleChange}\r\n            className={formErrors.password && \"input-error\"}\r\n          />\r\n          {formErrors.password && (\r\n            <span className=\"error\">{formErrors.password}</span>\r\n          )}\r\n        </div>\r\n\r\n        <span className=\"button-style\">\r\n          <button\r\n            type=\"submit\"\r\n            className={disableButton && \"disabled-btn\"}\r\n            disabled={disableButton}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\r\nimport Form from \"./molecule/Form\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}